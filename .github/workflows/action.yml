name: "Deploy to server"

on:
  workflow_call:
    secrets:
      REF_NAME:
        required: true
      SSH_ACTION_HOST:
        required: true
      SSH_ACTION_USER:
        required: true
      SSH_ACTION_KEY:
        required: true
      SSH_ACTION_PORT:
        required: true
      DOMAIN:
        required: true
      BRANCH:
        required: true
      PERSONAL_GITHUB_TOKEN:
        required: true
      DEBUG:
        required: false
      SECRET_KEY:
        required: false
      ALLOWED_HOSTS:
        required: false
      CORS_ORIGIN_ALLOW_ALL:
        required: false
      CORS_ORIGIN_WHITELIST:
        required: false
      POSTGRES_HOST:
        required: false
      POSTGRES_PORT:
        required: false
      POSTGRES_USER:
        required: false
      POSTGRES_PASSWORD:
        required: false
      POSTGRES_DB:
        required: false
      DBPOOL_HOST:
        required: false
      DBPOOL_PORT:
        required: false
      BACKEND_URL:
        required: false
      ROBOTS_TXT:
        required: false
      

    inputs:
      REPOSITORY_NAME:
        description: "Pure name of repository. ex: dt-backend"
        required: false
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: "command"
        uses: fifsky/ssh-action@master
        with:
          command: |
            export DEBUG=${{ secrets.DEBUG }}
            export SECRET_KEY=${{ secrets.SECRET_KEY }}
            export ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
            export CORS_ORIGIN_ALLOW_ALL=${{ secrets.CORS_ORIGIN_ALLOW_ALL }}
            export CORS_ORIGIN_WHITELIST=${{ secrets.CORS_ORIGIN_WHITELIST }}
            export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
            export POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER}}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export DBPOOL_HOST=${{ secrets.DBPOOL_HOST }}
            export DBPOOL_PORT=${{ secrets.DBPOOL_PORT }}
            export BACKEND_URL=${{ secrets.BACKEND_URL }}
            export ROBOTS_TXT=${{ secrets.ROBOTS_TXT }}
            export DOMAIN=${{ secrets.DOMAIN }}
            export REPOSITORY_NAME=${{ inputs.REPOSITORY_NAME }}
            export BRANCH=${{ secrets.BRANCH }}
            curl -H "Authorization: token ${{ secrets.PERSONAL_GITHUB_TOKEN }}" https://raw.githubusercontent.com/DeDogmaDao/${{ inputs.REPOSITORY_NAME }}/${{ secrets.BRANCH }}/docker-compose.deploy.yml > docker-compose.deploy.yml
            echo ${{ secrets.PERSONAL_GITHUB_TOKEN }} | docker login ghcr.io -u flokibb --password-stdin
            docker network create ddd_network || true
            docker volume create --name=mediafiles || true
            docker volume create --name=staticfiles || true
            docker volume create --name=database || true
            docker rmi -f ghcr.io/dedogmadao/${{ inputs.REPOSITORY_NAME }}/${{ inputs.REPOSITORY_NAME }}:${{ secrets.BRANCH }}-latest || echo "Ok"
            docker pull ghcr.io/dedogmadao/${{ inputs.REPOSITORY_NAME }}/${{ inputs.REPOSITORY_NAME }}:${{ secrets.BRANCH }}-latest
            docker-compose -f docker-compose.deploy.yml down
            docker-compose -f docker-compose.deploy.yml up -d
            rm -rf docker-compose.deploy.yml
          host: ${{ secrets.SSH_ACTION_HOST }}
          user: ${{ secrets.SSH_ACTION_USER }}
          key: ${{ secrets.SSH_ACTION_KEY }}
          port: ${{ secrets.SSH_ACTION_PORT }}
